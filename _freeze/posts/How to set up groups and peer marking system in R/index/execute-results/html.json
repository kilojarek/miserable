{
  "hash": "ec11d58b2563e4e274522b8a5035c108",
  "result": {
    "markdown": "---\ntitle: \"How to set up groups and peer marking system with R\"\nauthor: \"Jarek Bryk\"\ndate: \"2022-10-16\"\ncategories: [code, analysis]\neditor: visual\n---\n\n### Some background\n\nHere is an imaginary scenario: you are running a class where you have to split students into teams, in which they are to complete a project of some sort. Further imagine that you would like to track a) the level of cooperation within each team (e.g. to detect potential conflicts early) and b) the level of contribution of each member of a team to the final project mark. Also, you happen to know R...\n\n### How we use it\n\nIn our case, the students are actually learning data science with R and their group-based project is analysis of a complex dataset, but the system described below is agnostic to the topic, number of groups or teams or peer-marking criteria.\n\nWe have two independent groups of students and each group is split into several teams of 4-6 students. The peer marking system has five criteria, based on which each student *anonymously* marks *other* students in their team. The peer-marking is run twice in a term, once three weeks after the beginning of the group work and the second time in the final week of the class.\n\n### Marking criteria\n\n| Marking criteria                                                                           |\n|--------------------------------------------------------------------------------------------|\n| Ability to provide direction for the group activities (leadership)                         |\n| Involvement in the execution of the project work (developing R code)                       |\n| Involvement in the presentation of group work                                              |\n| Ability to suggest solutions and other approaches to group or work challenges (creativity) |\n| Ability to work well with and support other members of the group                           |\n\n| Peer mark | Guidance                                                                                                                                                                                                       |\n|--------------------|----------------------------------------------------|\n| 0         | Student did not contribute at all; was missing most of the time; did not complete assigned tasks; team's results would not change had this person not been a member of the team                                |\n| 1         | Student contributed only minimally; attendance and task completion was low; team's results would change only slightly had this person not been a member of the team                                            |\n| 2         | At least one of the elements (student contributions/attendance/task completion), including the contributions, was adequate                                                                                     |\n| 3         | At least two of the elements (student contributions/attendance/task completion), including the contributions, were good                                                                                        |\n| 4         | Student made substantial contributions to the team's results and maintained very good attendance and task completion                                                                                           |\n| 5         | Student made significant and substantial contributions; the team's results would be noticeably worse without them; all other responsibilities were completed (i.e. attended all meetings, completed all tasks) |\n\n: Table with peer-marking criteria\n\n### The system\n\nThe system comprises of three elements:\n\n-   dividing students into teams of a given size; we split students randomly into teams and only perform a manual check for gender balance of each team;\n\n-   generating Excel peer-marking forms that will be distributed to each student;\n\n-   collecting the forms and calculating an average mark for each criterion for each student, based on their team-mates marks; this mark will be ultimately released to each student.\n\nStudents don't mark themselves in this system (although it is easy to extend it to self-mark).\n\n### Let's code\n\nFinally!\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.4.1 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n```\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/jarek/Sites/miserable-quarto\n```\n:::\n\n```{.r .cell-code}\nlibrary(janitor)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(writexl)\n```\n:::\n\n#### Assigning students to teams\n\nFirstly, we load the list of students and their IDs, alongside information to which group they are assigned (teams must be created within each group). Depending on how your list of students is generated, some tidying up may be required here. In this example, I have two groups of students (I am using the names of characters of [the *Grishaverse* novels by Leigh Bardugo](https://en.wikipedia.org/wiki/Leigh_Bardugo)) and the file is already tidy.\n\n::: {.cell}\n\n```{.r .cell-code}\n# List of groups and teams is provided in an Excel file\ngroups <- read_xlsx(here(\"posts/How to set up groups and peer marking system in R/\", \"groups_example.xlsx\"))\n\ngroups\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 3\n   student_name     student_number group \n   <chr>                     <dbl> <chr> \n 1 Alina Starkov             11110 group1\n 2 Nikolai Lantsov           22220 group1\n 3 Zoya Nazyalensky          33330 group1\n 4 Malyen Oretsev            44440 group1\n 5 Genya Safin               55550 group1\n 6 David Kostyk              66660 group1\n 7 Adrik Zhabin              77770 group1\n 8 Hanne Brum                88880 group1\n 9 Isaak Andreyev            99990 group1\n10 Mayu Kir-Kaat            121212 group1\n# … with 13 more rows\n```\n:::\n:::\n\nWe also need another file with the names for the teams (list of cities and places in the *Grishaverse*), or we can manually create a character vector for this purpose.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Teams' names are also provided in an Excel file, but any vector with names will do\nteams_names <- read_xlsx(here(\"posts/How to set up groups and peer marking system in R/\", \"teams_names_example.xlsx\")) %>% pull(teams_names) %>% sample()\n\nteams_names\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Os Alta\"     \"Shadow Fold\" \"Ice Court\"   \"Fjerda\"      \"Novyi Zem\"  \n[6] \"Shu Han\"     \"Ketterdam\"   \"Ravka\"      \n```\n:::\n:::\n\nBefore the main assignment is run, we need to decide on how many students should be in each team. Counting how many students are there in each group should help with that, and setting up a desired number of students per team will do the rest. We use `floor()` to round down the number of teams per group, so the actual number of students in each team can be higher than the desired number.\n\n::: {.cell}\n\n```{.r .cell-code}\n# How many teams can we fit in each group, assuming students_per_team in each team\n# Note this number of students per team will be approximate, some groups may end up being larger\nstudents_per_team = 4\n\ngroups %>% \n\tcount(group)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  group      n\n  <chr>  <int>\n1 group1    10\n2 group2    13\n```\n:::\n\n```{.r .cell-code}\ngroups %>% \n\tgroup_by(group) %>% \n\tsummarise(teams_per_group = floor(n()/students_per_team))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  group  teams_per_group\n  <chr>            <dbl>\n1 group1               2\n2 group2               3\n```\n:::\n:::\n\nI am a fan of the purrr's package nest-map way of looping a function over multiple groups and have learned to shape the data in the way compatible with this workflow. Here, the challenge is that our arranging students into teams has to be done within each group, and the process has to be generalisable to any number of groups and any number of students per group.\n\nThis is how I go about it:\n\n\\- first, I split the data by group and for each group, I calculate the number of teams that I want to create given a desired number of students per team;\n\n\\- then, I randomise order of students in each group and assign them to the specified number of teams;\n\n\\- finally, I assign a randomly chosen name for each team across all groups so that each team name is unique for the whole class.\n\nThere probably exists a much simpler way of doing this (let me know), but it works here.\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a function to randomise order of students in each group and then split them into defined number of teams\nsplit2Teams <- function(df, no_of_teams) {\n\tdf %>% \n\t\tslice_sample(n = nrow(.)) %>% \n\t\tsplit(., 1:no_of_teams)\n}\n\n# Split students into groups and for each group: calculate number of teams, run the above function to arrange them randomly into teams and assign a unique team name.\n# Note: every time you run this piece of code, team assignment will change!\nteams_ready <- groups %>% \n\tnest(data = -group) %>% \n\tmutate(no_of_teams = map_dbl(data, ~floor(nrow(.)/students_per_team))) %>% \n\tmutate(teams = map2(data, no_of_teams, split2Teams)) %>% \n\tunnest(teams) %>% \n\tmutate(teams = map2(teams, sample(teams_names[1:length(teams)]), ~mutate(.x, team_name = .y))) %>% # Assign a random team name to each team\n\tselect(-c(data, no_of_teams)) %>% \n\tunnest(teams) %>% \n\trelocate(team_name, .after = student_number)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in split.default(x = seq_len(nrow(x)), f = f, drop = drop, ...): data\nlength is not a multiple of split variable\n```\n:::\n\n```{.r .cell-code}\nteams_ready\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 23 × 4\n   group  student_name     student_number team_name\n   <chr>  <chr>                     <dbl> <chr>    \n 1 group1 Adrik Zhabin              77770 Ice Court\n 2 group1 Nikolai Lantsov           22220 Ice Court\n 3 group1 Isaak Andreyev            99990 Ice Court\n 4 group1 Malyen Oretsev            44440 Ice Court\n 5 group1 Mayu Kir-Kaat            121212 Ice Court\n 6 group1 Alina Starkov             11110 Fjerda   \n 7 group1 Hanne Brum                88880 Fjerda   \n 8 group1 Genya Safin               55550 Fjerda   \n 9 group1 David Kostyk              66660 Fjerda   \n10 group1 Zoya Nazyalensky          33330 Fjerda   \n# … with 13 more rows\n```\n:::\n:::\n\nLet's save the list with ready-made teams to an Excel file, ready to be published for the students.\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_xlsx(teams_ready, here(\"posts/How to set up groups and peer marking system in R/\", paste(\"teams_ready\", Sys.Date(), \".xlsx\", sep = \"_\")))\n```\n:::\n\n#### Generating peer-marking forms\n\nThis was the easy bit. Now, we have to generate a set of files, one for each student, where each file contains the marking criteria and a set of columns for all the students in a team apart from the student to whom the file is addressed.\n\n::: {.cell}\n\n```{.r .cell-code}\n# A vector with all teams' names\ntnames <- sort(unique(teams_ready$team_name))\n\n# A list where each element, named after a team name, is a list of students in that team\ntlist <- map(tnames, ~teams_ready %>% filter(team_name == .x) %>% pull(student_name)) %>% set_names(tnames)\n\n# map(tnames, ~teams_ready %>% filter(team_name == .x) %>% select(student_name))\n\n# A list where each element, named after a team name, combines elements \"question\" and \"team_name\" with the list of students in that team\nbiglist <- map(tlist, ~c(list(question = NA_character_, team_name = NA_character_), Map(function(x) NA_character_, .x)))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://stackoverflow.com/questions/30150977/r-combine-list-of-data-frames-into-single-data-frame-add-column-with-list-inde\n# split2Teams2 <- function(df, students_per_team){\n# \tnumber_of_teams = floor(nrow(df)/students_per_team)\n# \tdf %>% split(., sample(sample(teams_names, students_per_team, replace = FALSE), number_of_teams)) %>% \n# \t\tbind_rows(., .id = \"team_name\")\n# \t}\n# \n# groups %>% \n# \tnest(data = -group) %>% \n# \tmutate(teams = map2(data, 4, splitTeams2)) %>% \n# \tselect(-data) %>% \n# \tunnest(teams)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}